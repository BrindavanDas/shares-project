# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1128, 676)
        MainWindow.setAcceptDrops(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setEnabled(True)
        self.textEdit.setGeometry(QtCore.QRect(435, 30, 300, 50))
        self.textEdit.setAutoFillBackground(False)
        self.textEdit.setObjectName("textEdit")
        self.connect_db = QtWidgets.QPushButton(self.centralwidget)
        self.connect_db.setGeometry(QtCore.QRect(70, 330, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.connect_db.setFont(font)
        self.connect_db.setObjectName("connect_db")
        self.db_status = QtWidgets.QLabel(self.centralwidget)
        self.db_status.setGeometry(QtCore.QRect(300, 350, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(13)
        self.db_status.setFont(font)
        self.db_status.setStyleSheet("background-color: rgb(255, 0, 0);")
        self.db_status.setAlignment(QtCore.Qt.AlignCenter)
        self.db_status.setObjectName("db_status")
        self.header_table_list = QtWidgets.QTextEdit(self.centralwidget)
        self.header_table_list.setGeometry(QtCore.QRect(60, 410, 221, 41))
        self.header_table_list.setObjectName("header_table_list")
        self.open_source_db = QtWidgets.QPushButton(self.centralwidget)
        self.open_source_db.setEnabled(True)
        self.open_source_db.setGeometry(QtCore.QRect(350, 420, 151, 21))
        self.open_source_db.setObjectName("open_source_db")
        self.update_source_db = QtWidgets.QPushButton(self.centralwidget)
        self.update_source_db.setGeometry(QtCore.QRect(370, 460, 121, 31))
        self.update_source_db.setObjectName("update_source_db")
        self.extract_prices = QtWidgets.QPushButton(self.centralwidget)
        self.extract_prices.setGeometry(QtCore.QRect(590, 420, 281, 21))
        self.extract_prices.setObjectName("extract_prices")
        self.update_prices = QtWidgets.QPushButton(self.centralwidget)
        self.update_prices.setGeometry(QtCore.QRect(660, 470, 121, 21))
        self.update_prices.setObjectName("update_prices")
        self.list_of_tables = QtWidgets.QListWidget(self.centralwidget)
        self.list_of_tables.setGeometry(QtCore.QRect(60, 450, 221, 171))
        self.list_of_tables.setObjectName("list_of_tables")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(192, 112, 686, 185))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(60)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.start_date = QtWidgets.QCalendarWidget(self.layoutWidget)
        self.start_date.setObjectName("start_date")
        self.horizontalLayout.addWidget(self.start_date)
        self.end_date = QtWidgets.QCalendarWidget(self.layoutWidget)
        self.end_date.setObjectName("end_date")
        self.horizontalLayout.addWidget(self.end_date)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1128, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:24pt; font-weight:600;\">SHARES TOOL</span></p></body></html>"))
        self.connect_db.setText(_translate("MainWindow", "Connect to DB"))
        self.db_status.setText(_translate("MainWindow", "Disconnected"))
        self.header_table_list.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:11pt;\">Tables in DB</span></p></body></html>"))
        self.open_source_db.setText(_translate("MainWindow", "Open Source DB to edit"))
        self.update_source_db.setText(_translate("MainWindow", "Update source DB"))
        self.extract_prices.setText(_translate("MainWindow", "Extract prices and calculate indicator values"))
        self.update_prices.setText(_translate("MainWindow", "Update prices to DB"))
